package client;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Graphics;
import java.awt.GridLayout;

import javax.swing.BoxLayout;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.ScrollPaneConstants;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class Window extends JFrame {
	
	private JTextField txtHeight;
	private JTextField txtWidth;
	private JTextField txtTileSize;
	private IBuilderToLevelAdapter btlAdapter;	
	private JPanel pnlDisplayArea;

	/**
	 * Create the frame.
	 */
	public Window(IBuilderToLevelAdapter btlAdapter) {
		this.btlAdapter = btlAdapter;
		initGUI();
	}
	
	/**
	 * GUI initialization code. Most of this is automatically generated by Swing.
	 */
	private void initGUI() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);		
				
		
		JPanel pnlDisplayControl = new JPanel();		
		pnlDisplayControl.setLayout(new GridLayout(3,2));
		getContentPane().add(pnlDisplayControl, BorderLayout.WEST);
		
		JLabel lblHeight = new JLabel("Height (px):");
		pnlDisplayControl.add(lblHeight);
		
		txtHeight = new JTextField();
		txtHeight.setText("400");
		pnlDisplayControl.add(txtHeight);
		txtHeight.setColumns(10);
		
		JLabel lblWidth = new JLabel("Width (px):");
		pnlDisplayControl.add(lblWidth);
		
		txtWidth = new JTextField();
		txtWidth.setText("700");
		pnlDisplayControl.add(txtWidth);
		txtWidth.setColumns(10);					
		
		this.pnlDisplayArea = new JPanel() {
			/**
			* 
			*/
			private static final long serialVersionUID = 1L;

			/**
			 * Overridden paintComponent method to paint a shape in the panel.
			 * 
			 * @param g
			 *            The Graphics object to paint on.
			 **/
			public void paintComponent(Graphics g) {
				super.paintComponent(g); // Do everything normally done first, e.g.
											// clear the screen.
				btlAdapter.render(this, g);
			};
		}; 
		pnlDisplayArea.setBackground(Color.CYAN);
		getContentPane().add(pnlDisplayArea, BorderLayout.CENTER);
		
		JButton btnApply = new JButton("Apply");
		btnApply.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				int width;
				try {
					width = Integer.valueOf(txtWidth.getText());
				} catch (NumberFormatException e) {			
					JOptionPane.showMessageDialog(new JFrame("JOptionPane showMessageDialouge"), 
							"Width must be an integer.");
					return;
				}
				int height;
				try {
					height = Integer.valueOf(txtHeight.getText());
				} catch (NumberFormatException e) {
					JOptionPane.showMessageDialog(new JFrame("JOptionPane showMessageDialouge"), 
							"Height must be an integer.");
					return;
				}
				pnlDisplayArea.setSize(width, height);
			}
		});
		
		pnlDisplayControl.add(btnApply);						
				
		/**
		 * pnlDisplayArea.setSize(Integer.valueOf(txtWidth.getText()), 
				Integer.valueOf(txtHeight.getText()));
		 */
					
	}
	
	/**
	 * After setting up the frame, make it visible to the user.
	 */
	public void start() {
		btlAdapter.setBg("assets/bgSunny.png");
		
		setVisible(true);
	}

}
